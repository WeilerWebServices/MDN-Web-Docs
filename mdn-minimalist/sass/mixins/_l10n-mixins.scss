/*
Bidi / l10n
- The bidi mixins are used to declare both the LTR and RTL values for
  a property together and output appropriate declarations
- This makes it easier to maintain the RTL version since you only have
  to update values in one place.
====================================================================== */

/*
    @mixin bidi
    accepts: an arbitrary number of lists - each list must have 3 or 4 values

    A list with three properties overrides the ltr value in rtl locales
    @include bidi([float, left, right])
    LTR: float: left;
    RTL: float: right;

    A list with four properties overrides the ltr value in rtl locales
    AND provides a new rtl only property with a value equal to the ltr value
    @include bidi([margin-right, 10px, 0, margin-left])
    LTR: margin-right: 10px;
    RTL: margin-right: 0;
         margin-left: 10px;

    Example input:
    .test {
        @include bidi(
            [float, left, right],
            [margin-right, (20px / 2), 0, margin-left]
        );
    }

    Example output:
    .test {
        float: left;
        margin-right: 10px;
    }
    html[dir='rtl'] .test {
        float: right;
        margin-right: 0;
        margin-left: 10px;
    }
}
*/
@mixin bidi($list...) {
  & {
    @each $property, $ltr-value in $list {
      @if type-of($ltr-value) == "null" {
        @error '$ltr-value cannot be null, see previous warning for stack trace';
      }
      #{$property}: $ltr-value;
    }
  }

  html[dir="rtl"] & {
    @each $property, $ltr-value, $inverse-value, $inverse-val-or-prop in $list {
      @if $inverse-val-or-prop {
        #{$property}: $inverse-value;
        #{$inverse-val-or-prop}: $ltr-value;
      } @else {
        #{$property}: $inverse-value;
      }
    }
  }
}
