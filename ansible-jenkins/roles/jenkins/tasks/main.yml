---
- name: Add Jenkins-CI Repository Key
  apt_key:
    url: "http://pkg.jenkins-ci.org/{{ ansible_os_family|lower }}/jenkins-ci.org.key"
    state: present

- name: Add Jenkins-CI Repository
  apt_repository:
    repo: 'deb http://pkg.jenkins-ci.org/{{ ansible_os_family|lower }} binary/'
    state: present
    update_cache: yes

- name: Install Jenkins-CI
  apt:
    name: jenkins
    state: present
    update_cache: yes
    cache_valid_time: 600
  notify:
    - Restart Jenkins
  register: install_jenkins

- name: Add Jenkins user to docker group
  user:
    name: jenkins
    groups: docker
  notify: Restart Jenkins

- name: Set Jenkins-CI to listen only on 127.0.0.1
  lineinfile:
    dest: /etc/default/jenkins
    regexp: ^JENKINS_ARGS=
    line: 'JENKINS_ARGS="--webroot=/var/cache/$NAME/war --httpPort=$HTTP_PORT --httpListenAddress=127.0.0.1"'
  notify: Restart Jenkins
  tags:
    - jenkins-conf

- name: Enable Jenkins-CI Permissive Script Plugin
  lineinfile:
    dest: /etc/default/jenkins
    regexp: ^JAVA_ARGS=
    line: 'JAVA_ARGS="-Djava.awt.headless=true -Dpermissive-script-security.enabled=true"'
  notify: Restart Jenkins
  tags:
    - jenkins-conf

- name: Create backup directory
  file:
    path: "{{ jenkins_backup_directory }}"
    owner: jenkins
    group: jenkins
    mode: '0755'
    state: directory

- name: Copy backup script
  template:
    src: "jenkins-backup.sh.j2"
    dest: "/usr/local/bin/jenkins-backup.sh"
    mode: "0755"

- name: Copy jenkins nightly script
  template:
    src: "jenkins-nightly.j2"
    dest: "/etc/cron.daily/jenkins-nightly"
    mode: "0755"

- name: Create cron job for jenkins-backup script
  cron:
    name: Backup jenkins
    user: root
    job: "/usr/bin/flock -w 10 /var/lock/backup_jenkins.lock /usr/local/bin/jenkins-backup.sh 2>&1 /dev/null"
    hour: "*/1"
    minute: "30"
    user: root
    cron_file: jenkins_backup
